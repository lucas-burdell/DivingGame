<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>jellly_fish_green</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///varibles
timer = 0
//0 is up, 1 is downone, 2 is downtwo, 3 is downthree, 4 to start
upOrDown = 0
//direction
up = 90
down = 270
right = 0
left = 180
//Speed changes
motionStart = 1
motionUp = 2
motionDownOne = 2
motionDownTwo = .5
motionDownThree = .25
//before changing direction
timeDownOne = 900
timeDowntwo = 1125
timeDownThree = 1575
timeEndCycle = 3375
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///up and down
    
    
    if (timer == 0 &amp;&amp; upOrDown = 4){
    motion_add(up, motionStart) 
    upOrDown = 1
        
    } else if(timer == 0 &amp;&amp; upOrDown = 0){
    motion_add(up, motionUp) 
    upOrDown = 1
    
    } else if(timer &gt;= timeDownOne &amp;&amp; upOrDown = 1){
    motion_add(down, motionDownOne) 
    upOrDown = 2
    
    } else if(timer &gt;= timeDowntwo &amp;&amp; upOrDown = 2){
    motion_add(up, motionDownTwo)
    upOrDown = 3
    
    } else if(timer &gt;= timeDownThree &amp;&amp; upOrDown = 3){
    motion_add(up, motionDownThree)
    upOrDown = 0
    timer = 0
    }
    
    
    //timer code
    show_debug_message(timer)
     timer += 1
     
    if(timer &gt;= timeEndCycle){
     timer = 0
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
